{"version":3,"file":"index.umd.development.js","sources":["../src/rest/index.ts","../src/hooks/useFetch.ts","../node_modules/immer/src/utils/errors.ts","../node_modules/immer/src/utils/common.ts","../node_modules/immer/src/types/types-internal.ts","../node_modules/immer/src/utils/plugins.ts","../node_modules/immer/src/core/scope.ts","../node_modules/immer/src/core/finalize.ts","../node_modules/immer/src/core/proxy.ts","../node_modules/immer/src/core/immerClass.ts","../node_modules/immer/src/core/current.ts","../node_modules/immer/src/utils/env.ts","../node_modules/immer/src/immer.ts","../src/context-storage/default-values.ts","../src/context-storage/initial-hooks-wrapper.tsx","../src/context-storage/index.tsx","../src/hooks/useFetchContext.ts","../src/hooks/useCatalogs.ts"],"sourcesContent":["interface FetchDataResponse<T> {\r\n    success: boolean;\r\n    data: T | null;\r\n    message: string;\r\n    totalCount?: number | null;\r\n}\r\n\r\nexport type ReceivedMethodType = 'GET' | 'POST' | 'PUT'| 'DELETE';\r\ntype ReceivedDataType = string | number | Record<string, any> | FormData;\r\n\r\n/**\r\n * REST запрос\r\n * @param restName - наименование route из api\r\n * @param method - тип запроса (GET, POST, PUT, DELETE)\r\n * @param data - данные для rest запроса\r\n * @param dataType - тип тела запроса (JSON, FormData)\r\n */\r\nexport const fetchData = async <T = any>(restName: string, method: ReceivedMethodType, data?: ReceivedDataType, dataType: 'JSON' | 'FormData' = 'JSON'): Promise<FetchDataResponse<T>> => {\r\n    let additionalLink = '';\r\n    let body: FormData | string | undefined;\r\n    const headers = new Headers();\r\n\r\n    headers.append('accept', 'application/json');\r\n\r\n    if (typeof data === 'string' || typeof data === 'number') {\r\n        additionalLink = `${data}`;\r\n    }\r\n\r\n    if (typeof data !== 'string' && typeof data === 'object') {\r\n        if (dataType === 'JSON') {\r\n            headers.append('content-type', 'application/json');\r\n\r\n            body = JSON.stringify(data);\r\n        }\r\n\r\n        if (dataType === 'FormData') {\r\n            body = data as FormData;\r\n        }\r\n    }\r\n\r\n    try {\r\n        const response = await fetch(`${restName}${additionalLink}`, {\r\n            method,\r\n            body,\r\n            headers,\r\n            credentials: 'same-origin',\r\n        });\r\n\r\n        if (response.ok === false) {\r\n            if (response.status === 401) {\r\n                throw new Error('Ошибка авторизации пользователя.');\r\n            } else {\r\n                throw new Error(`${response.url} (${response.status})`);\r\n            }\r\n        }\r\n\r\n        try {\r\n            const json = await response.json();\r\n\r\n            return json;\r\n        } catch (err) {\r\n            throw new Error(err);\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n\r\n        return {\r\n            success: false,\r\n            message: err,\r\n            data: null,\r\n        };\r\n    }\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { fetchData } from \"../rest\";\r\nimport { UseFetchInterface, UseFetchParams } from \"../types/use-fetch\";\r\n\r\nconst defaultHook = <T = any>(params: UseFetchParams<T>): UseFetchInterface<T> => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState<T>(params.defaultValue);\r\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\r\n\r\n  const getData = async () => {\r\n    setLoading(true);\r\n\r\n    const result = await fetchData<T>(\r\n      params.rest.name,\r\n      params.rest.method,\r\n      params.rest.body\r\n    );\r\n\r\n    if (result.success && result.data) {\r\n      setData(result.data);\r\n    } else if (result.success === false) {\r\n      setErrorMessage(result.message);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [params.rest.body]);\r\n\r\n  return {\r\n    data,\r\n    error: errorMessage,\r\n    loading,\r\n  };\r\n};\r\n\r\nexport default defaultHook;\r\n","const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n\t21(thing: string) {\n\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t},\n\t22(thing: string) {\n\t\treturn `'current' expects a draft, got: ${thing}`\n\t},\n\t23(thing: string) {\n\t\treturn `'original' expects a draft, got: ${thing}`\n\t},\n\t24: \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.map(s => `'${s}'`).join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtypeObject,\n\tArchtypeArray,\n\tArchtypeMap,\n\tArchtypeSet,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\treturn !proto || proto === Object.prototype\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(23, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport const getOwnPropertyDescriptors =\n\tObject.getOwnPropertyDescriptors ||\n\tfunction getOwnPropertyDescriptors(target: any) {\n\t\t// Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n\t\tconst res: any = {}\n\t\townKeys(target).forEach(key => {\n\t\t\tres[key] = Object.getOwnPropertyDescriptor(target, key)\n\t\t})\n\t\treturn res\n\t}\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === ArchtypeObject) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key => {\n\t\t\tif (!enumerableOnly || typeof key !== \"symbol\") iter(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): 0 | 1 | 2 | 3 {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? ArchtypeArray\n\t\t: isMap(thing)\n\t\t? ArchtypeMap\n\t\t: isSet(thing)\n\t\t? ArchtypeSet\n\t\t: ArchtypeObject\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === ArchtypeMap\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === ArchtypeMap ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === ArchtypeMap) thing.set(propOrOldValue, value)\n\telse if (t === ArchtypeSet) {\n\t\tthing.delete(propOrOldValue)\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any) {\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\tconst descriptors = getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n","import {\n\tSetState,\n\tImmerScope,\n\tProxyObjectState,\n\tProxyArrayState,\n\tES5ObjectState,\n\tES5ArrayState,\n\tMapState,\n\tDRAFT_STATE\n} from \"../internal\"\n\nexport type Objectish = AnyObject | AnyArray | AnyMap | AnySet\nexport type ObjectishNoSet = AnyObject | AnyArray | AnyMap\n\nexport type AnyObject = {[key: string]: any}\nexport type AnyArray = Array<any>\nexport type AnySet = Set<any>\nexport type AnyMap = Map<any, any>\n\nexport const ArchtypeObject = 0\nexport const ArchtypeArray = 1\nexport const ArchtypeMap = 2\nexport const ArchtypeSet = 3\n\nexport const ProxyTypeProxyObject = 0\nexport const ProxyTypeProxyArray = 1\nexport const ProxyTypeES5Object = 4\nexport const ProxyTypeES5Array = 5\nexport const ProxyTypeMap = 2\nexport const ProxyTypeSet = 3\n\nexport interface ImmerBaseState {\n\tparent_?: ImmerState\n\tscope_: ImmerScope\n\tmodified_: boolean\n\tfinalized_: boolean\n\tisManual_: boolean\n}\n\nexport type ImmerState =\n\t| ProxyObjectState\n\t| ProxyArrayState\n\t| ES5ObjectState\n\t| ES5ArrayState\n\t| MapState\n\t| SetState\n\n// The _internal_ type used for drafts (not to be confused with Draft, which is public facing)\nexport type Drafted<Base = any, T extends ImmerState = ImmerState> = {\n\t[DRAFT_STATE]: T\n} & Base\n","import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tProxyTypeES5Array,\n\tProxyTypeES5Object,\n\tProxyTypeMap,\n\tProxyTypeSet,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\trootState: ImmerState,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\thasChanges_(state: ES5ArrayState | ES5ObjectState): boolean\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(18, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: any\n\tcopy_: any\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeMap\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeSet\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyTypeProxyObject ||\n\t\tstate.type_ === ProxyTypeProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tProxyTypeES5Object,\n\tProxyTypeES5Array,\n\tProxyTypeSet,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen,\n\tshallowCopy\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE],\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumarable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyTypeES5Object || state.type_ === ProxyTypeES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_))\n\t\t\t\t: state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// Although the original test case doesn't seem valid anyway, so if this in the way we can turn the next line\n\t\t// back to each(result, ....)\n\t\teach(\n\t\t\tstate.type_ === ProxyTypeSet ? new Set(result) : result,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyTypeSet && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\tif (scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyObject\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyTypeProxyArray : (ProxyTypeProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existig to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ProxyTypeProxyArray || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\treturn objectTraps.deleteProperty!.call(this, state[0], prop)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = Object.getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = Object.getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {base_: any; copy_: any}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = true\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t\tthis.produce = this.produce.bind(this)\n\t\tthis.produceWithPatches = this.produceWithPatches.bind(this)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce(base: any, recipe?: any, patchListener?: any) {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === NOTHING) return undefined\n\t\t\tif (result === undefined) result = base\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\treturn result\n\t\t} else die(21, base)\n\t}\n\n\tproduceWithPatches(arg1: any, arg2?: any, arg3?: any): any {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => arg1(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst nextState = this.produce(arg1, arg2, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [nextState, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is enabled.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (value && !hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches(base: Objectish, patches: Patch[]) {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches.slice(i + 1))\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n","import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tget,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tArchtypeMap,\n\tArchtypeSet,\n\tgetArchtype,\n\tgetPlugin\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(22, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tconst archType = getArchtype(value)\n\tif (state) {\n\t\tif (\n\t\t\t!state.modified_ &&\n\t\t\t(state.type_ < 4 || !getPlugin(\"ES5\").hasChanges_(state as any))\n\t\t)\n\t\t\treturn state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = copyHelper(value, archType)\n\t\tstate.finalized_ = false\n\t} else {\n\t\tcopy = copyHelper(value, archType)\n\t}\n\n\teach(copy, (key, childValue) => {\n\t\tif (state && get(state.base_, key) === childValue) return // no need to copy or search in something that didn't change\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\t// In the future, we might consider freezing here, based on the current settings\n\treturn archType === ArchtypeSet ? new Set(copy) : copy\n}\n\nfunction copyHelper(value: any, archType: number): any {\n\t// creates a shallow copy, even if it is a map or set\n\tswitch (archType) {\n\t\tcase ArchtypeMap:\n\t\t\treturn new Map(value)\n\t\tcase ArchtypeSet:\n\t\t\t// Set will be cloned as array temporarily, so that we can replace individual items\n\t\t\treturn Array.from(value)\n\t}\n\treturn shallowCopy(value)\n}\n","// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol.for(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n","import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * Always freeze by default, even in production mode\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n","export const fetchDataContextStorageDefaultValues = {\n    createAdditionalState: () => {},\n    state: {\n        catalogs: {\n            data: [],\n            loading: true,\n            setters: {\n                setData: () => {},\n                setLoading: () => {},\n            },\n        },\n        appConfig: {\n            data: undefined,\n            loading: true,\n            setters: {\n                setData: () => {},\n                setLoading: () => {},\n            },\n        },\n    }\n};\n","import { PropsWithChildren } from 'react';\r\nimport { useCatalogs } from '../hooks/useCatalogs';\r\n\r\nconst InitialHooksWrapper = ({ children }: PropsWithChildren<any>) => {\r\n    useCatalogs();\r\n\r\n    return children;\r\n};\r\n\r\nexport default InitialHooksWrapper;","import React, { useState, PropsWithChildren } from 'react';\r\nimport { produce } from 'immer';\r\nimport { AppConfigInterface } from '../types/app-config';\r\nimport { CatalogInterface } from '../types/catalog';\r\nimport { fetchDataContextStorageDefaultValues } from './default-values';\r\nimport InitialHooksWrapper from './initial-hooks-wrapper';\r\nimport { AdditionalStateInterface, FetchDataContextStorageInterface } from './types';\r\n\r\nexport const FetchDataContextStorage = React.createContext<FetchDataContextStorageInterface>(fetchDataContextStorageDefaultValues);\r\n\r\nexport const FetchDataContextStorageWrapper = ({ children }: PropsWithChildren<any>): React.ReactElement => {\r\n    const [catalogs, setCatalogs] = useState<CatalogInterface[]>([]);\r\n    const [catalogsLoading, setCatalogsLoading] = useState(true);\r\n    const [appConfig, setAppConfig] = useState<AppConfigInterface | undefined>();\r\n    const [appConfigLoading, setAppConfigLoading] = useState(true);\r\n\r\n    const [additionalState, setAdditionalState] = useState<AdditionalStateInterface>({});\r\n\r\n    const setDataOfAdditionalState = <T,>(key: string, data: T) => {\r\n        const nextState = produce(additionalState, (draft: AdditionalStateInterface<T>) => {\r\n            draft[key].data = data;\r\n        });\r\n\r\n        setAdditionalState(nextState);\r\n    }\r\n\r\n    const setLoadingOfAdditionalState = <T,>(key: string, value: boolean) => {\r\n        const nextState = produce(additionalState, (draft: AdditionalStateInterface<T>) => {\r\n            draft[key].loading = value;\r\n        });\r\n\r\n        setAdditionalState(nextState);\r\n    }\r\n\r\n    const createAdditionalState = <T,>(key: string, defaultValue: T) => {\r\n        if (typeof additionalState[key] === 'undefined') {\r\n            const nextState = produce(additionalState, (draft: AdditionalStateInterface<T>) => {\r\n                draft[key] = {\r\n                    data: defaultValue,\r\n                    loading: true,\r\n                    setters: {\r\n                        setData: (v: T) => setDataOfAdditionalState<T>(key, v),\r\n                        setLoading: (v: boolean) => setLoadingOfAdditionalState<T>(key, v),\r\n                    }\r\n                }\r\n            });\r\n\r\n            setAdditionalState(nextState);\r\n        }\r\n    }\r\n\r\n    const contextValue: FetchDataContextStorageInterface = {\r\n        createAdditionalState,\r\n        state: {\r\n            catalogs: {\r\n                data: catalogs,\r\n                loading: catalogsLoading,\r\n                setters: {\r\n                    setData: setCatalogs,\r\n                    setLoading: setCatalogsLoading,\r\n                },\r\n            },\r\n            appConfig: {\r\n                data: appConfig,\r\n                loading: appConfigLoading,\r\n                setters: {\r\n                    setData: setAppConfig,\r\n                    setLoading: setAppConfigLoading,\r\n                },\r\n            },\r\n            ...additionalState\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FetchDataContextStorage.Provider value={contextValue}>\r\n            <InitialHooksWrapper>\r\n                {children}\r\n            </InitialHooksWrapper>\r\n        </FetchDataContextStorage.Provider>\r\n    );\r\n};\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { FetchDataContextStorage } from \"../context-storage\";\r\nimport { fetchData } from \"../rest\";\r\nimport { UseFetchInterface, UseFetchParamsWithContext } from \"../types/use-fetch\";\r\n\r\nexport const useFetchContext = <T = any>(\r\n    params: UseFetchParamsWithContext<T>\r\n): UseFetchInterface<T> => {\r\n    const context = useContext(FetchDataContextStorage);\r\n\r\n    const [errorMessage, setErrorMessage] = useState<string | null>(null);\r\n\r\n    const getData = async () => {\r\n        context.state[params.key].setters.setLoading(true);\r\n\r\n        const result = await fetchData<T>(\r\n            params.rest.name,\r\n            params.rest.method,\r\n            params.rest.body\r\n        );\r\n\r\n        if (result.success && result.data) {\r\n            context.state[params.key].setters.setData(result.data);\r\n        } else if (result.success === false) {\r\n            setErrorMessage(result.message);\r\n        }\r\n\r\n        context.state[params.key].setters.setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (context) {\r\n            if (context.state[params.key] && typeof context.state[params.key] === \"object\") {\r\n                getData();\r\n            } else {\r\n                context.createAdditionalState(params.key, params.defaultValue);\r\n            }\r\n        }\r\n    }, [params.rest]);\r\n\r\n    return {\r\n        data: context && context.state[params.key] ? context.state[params.key].data : params.defaultValue,\r\n        error: errorMessage,\r\n        loading:\r\n            context && context.state[params.key]\r\n                ? context.state[params.key].loading\r\n                : false,\r\n    };\r\n};\r\n","import { CatalogInterface } from '../types/catalog';\r\nimport useFetch from './useFetch';\r\nimport { useFetchContext } from './useFetchContext';\r\n\r\nexport const useCatalogs = (body?: any) => useFetch<CatalogInterface[]>({\r\n    defaultValue: [],\r\n    rest: {\r\n        name: 'catalogs/list',\r\n        method: 'POST',\r\n        body\r\n    }\r\n});\r\n\r\nexport const useCatalogsWithContext = (body?: any) => useFetchContext<CatalogInterface[]>({\r\n    defaultValue: [],\r\n    rest: {\r\n        name: 'catalogs/list',\r\n        method: 'POST',\r\n        body\r\n    },\r\n    key: 'catalogs'\r\n});"],"names":["useState","useEffect","die","error","args","e","errors","msg","apply","Error","isDraft","value","DRAFT_STATE","isDraftable","proto","Object","getPrototypeOf","prototype","isPlainObject","Array","isArray","DRAFTABLE","constructor","isMap","isSet","each","obj","iter","enumerableOnly","getArchtype","keys","ownKeys","forEach","key","entry","index","thing","state","type_","has","prop","hasOwnProperty","call","get","set","propOrOldValue","t","delete","add","is","x","y","target","hasMap","Map","hasSet","Set","latest","copy_","base_","shallowCopy","base","slice","descriptors","getOwnPropertyDescriptors","i","length","desc","writable","configurable","enumerable","create","freeze","deep","isFrozen","clear","dontMutateFrozenCollections","getPlugin","pluginKey","plugin","plugins","getCurrentScope","currentScope","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","drafts_","revokeDraft","parent_","enterScope","immer","immer_","canAutoFreeze_","unfinalizedDrafts_","draft","revoke_","revoked_","processResult","result","baseDraft","isReplaced","undefined","useProxies_","willFinalizeES5_","modified_","finalize","maybeFreeze","generateReplacementPatches_","NOTHING","rootScope","path","childValue","finalizeProperty","scope_","finalized_","draft_","generatePatches_","parentState","targetObject","rootPath","res","assigned_","concat","autoFreeze_","peek","getDescriptorFromProto","source","getOwnPropertyDescriptor","markChanged","prepareCopy","createProxy","parent","proxyMap_","proxySet_","isManual_","traps","objectTraps","arrayTraps","Proxy","revocable","revoke","proxy","createProxyProxy","createES5Proxy_","push","current","currentImpl","copy","archType","hasChanges_","copyHelper","from","hasSymbol","Symbol","hasProxies","Reflect","for","data","op","getOwnPropertySymbols","getOwnPropertyNames","_desc$get","readPropFromProto","currentState","deleteProperty","owner","defineProperty","setPrototypeOf","fn","arguments","this","isNaN","parseInt","Immer","config","useProxies","setUseProxies","autoFreeze","setAutoFreeze","produce","bind","produceWithPatches","recipe","defaultBase","self","_this","hasError","Promise","then","arg1","arg2","patches","inversePatches","_this2","p","ip","createDraft","finishDraft","applyPatches","patch","applyPatchesImpl","applyPatches_","React","useContext","useFetch"],"mappings":"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"}